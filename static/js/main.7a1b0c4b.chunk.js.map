{"version":3,"sources":["redux/reducer/reducer.js","redux/actions/actions.js","components/autocomplete/autocomplete.js","components/request-service/request-service.js","components/cloud-button/cloud-button.js","components/input-container/input-container.js","components/item-info/item-info.js","components/item-container/item-container.js","components/cloud-title/cloud-title.js","components/product-app/product-app.js","components/pdf-list/pdf-list.js","App.js","components/local-storage/local-storage.js","registerServiceWorker.js","index.js"],"names":["reducer","state","arguments","length","undefined","goods","sum","action","type","Object","objectSpread","defineProperty","item","category","toConsumableArray","concat","generalSum","price","categoriesSum","State","newPrice","map","id","name","newName","newState","filter","actions","addItem","editItem","deleteItem","AutoComplete","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inputFocused","matchedItems","inputChanged","handleClick","bind","assertThisInitialized","handleFocus","handleInputChange","fillAutoComplete","handleFocusLost","nextProps","setState","values","_this2","document","addEventListener","event","target","className","value","categories","i","console","log","substr","toLowerCase","push","selectedValue","innerHTML","parentNode","childNodes","_this3","_this$state","objectWithoutProperties","react_default","a","createElement","placeholder","children","onChange","onFocus","onClick","Component","makeRequest","url","axios","get","then","response","JSON","parse","request","_unused","Error","CloudButton","InputContainer","handleAddButtonClick","clearFields","clearState","getList","getModel","hasErrored","models","Date","now","preventDefault","inputs","getElementsByTagName","marks","catalogue","model","find","categoryValue","_this4","currentTarget","parseInt","_this5","autocomplete","cloud_button","connect","dispatch","bindActionCreators","ItemInfo","onEditClick","onSaveClick","isEditable","ItemContainer","keys","key","item_info","CloudTitle","ProductApp","cloud_title","input_container","item_container_item_container","Link","to","pdfMake","vfs","pdfFonts","PDFList","makePdf","generateRows","generateTables","docDef","categoryArr","content","text","style","table","widths","body","docDefinition","styles","header","fontSize","bold","margin","alignment","subheader","tableBody","tableHeader","color","createPdf","open","mainArray","currentArray","predefinedStore","serializedState","localStorage","getItem","err","loadStore","store","createStore","subscribe","getState","stringify","setItem","App","es","Route","path","exact","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","BrowserRouter","basename","process","src_App_0","getElementById","URL","origin","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7a1b0c4b.chunk.js","sourcesContent":["\r\nlet reducer = (state = {goods: [], sum: {}}, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_ITEM':\r\n            debugger;\r\n            return {\r\n                ...state,\r\n                goods: {\r\n                    ...state.goods,\r\n                    [action.item.category]: [\r\n                        ...state.goods[action.item.category] || [],\r\n                        action.item\r\n                    ]\r\n                },\r\n                sum: {\r\n                    ...state.sum,\r\n                    generalSum: (state['sum']['generalSum'] || 0) + action.item.price,\r\n                    categoriesSum: {\r\n                        ...state.sum.categoriesSum || [],\r\n                        [action.item.category]: ((state['sum']['categoriesSum'] || {})[action.item.category] || 0) + action.item.price\r\n                    }\r\n                }\r\n            }\r\n        case 'EDIT_ITEM':\r\n            let State = {\r\n                ...state,\r\n                goods: {\r\n                    ...state.goods,\r\n                    [action.item.category]: [\r\n                        ...state.goods[action.item.category],\r\n                    ]\r\n                },\r\n                sum: {\r\n                    generalSum: (state['sum']['generalSum'] || 0) - action.item.price + action.newPrice,\r\n                    categoriesSum: {\r\n                        ...state.sum.categoriesSum || [],\r\n                        [action.item.category]: ((state['sum']['categoriesSum'] || {})[action.item.category] || 0) - action.item.price + action.newPrice\r\n                    }\r\n                }\r\n            };\r\n            State.goods[action.item.category] = State.goods[action.item.category].map((item) => {\r\n                debugger;\r\n                if (item.id === action.item.id) {\r\n                    return {\r\n                        ...item,\r\n                        name: action.newName,\r\n                        price: action.newPrice\r\n                    }\r\n                } else {\r\n                    return {...item};\r\n                }\r\n            });\r\n            return State;\r\n        case 'DELETE_ITEM':\r\n            let newState = {\r\n                ...state,\r\n                goods: {\r\n                    ...state.goods,\r\n                    [action.item.category]: [\r\n                        ...state.goods[action.item.category],\r\n                    ]\r\n                },\r\n                sum: {\r\n                    generalSum: (state['sum']['generalSum'] || 0) - action.item.price,\r\n                    categoriesSum: {\r\n                        ...state.sum.categoriesSum || [],\r\n                        [action.item.category]: ((state['sum']['categoriesSum'] || {})[action.item.category] || 0) - action.item.price\r\n                    }\r\n                }\r\n            };\r\n            newState.goods[action.item.category] = newState.goods[action.item.category].filter((item) => {\r\n                return item.id !== action.item.id\r\n            });\r\n\r\n            if (newState.goods[action.item.category].length === 0) {\r\n                delete newState.goods[action.item.category];\r\n            }\r\n            return newState;\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default reducer;\r\n\r\n\r\n","let actions = {\r\n    addItem: function(item) {\r\n        debugger;\r\n        return {\r\n            type: 'ADD_ITEM',\r\n            item: item\r\n        }\r\n    },\r\n    editItem: function(item, newName, newPrice) {\r\n        return {\r\n            type: 'EDIT_ITEM',\r\n            item: item,\r\n            newName: newName,\r\n            newPrice: newPrice\r\n        }\r\n    },\r\n    deleteItem: function(item) {\r\n        return {\r\n            type: 'DELETE_ITEM',\r\n            item: item\r\n        }\r\n    }\r\n};\r\nexport default actions;\r\n","\r\n/**\r\n * AutoComplete Component\r\n * inserts autocomplete function into InputContainer\r\n * receives props: category(string), categories(array)\r\n * Creation Date: 24.09.18\r\n */\r\n\r\nimport React, { Component } from 'react';\r\n\r\nclass AutoComplete extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            inputFocused: false,\r\n            category: '',\r\n            matchedItems: [],\r\n            inputChanged: false,\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleFocus = this.handleFocus.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.fillAutoComplete = this.fillAutoComplete.bind(this);\r\n        this.handleFocusLost = this.handleFocusLost.bind(this);\r\n\r\n    }\r\n\r\n    /**\r\n     * sets values to matchedItems - cars brand\r\n     * @param nextProps {object}\r\n     */\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({\r\n            matchedItems: this.fillAutoComplete('', nextProps.values),\r\n        })\r\n    }\r\n    /**\r\n     * reacts on document click and hides auto complete list\r\n     */\r\n    componentDidMount() {\r\n        document.addEventListener('click', (event) => {\r\n            if (event.target.className !== 'select' && event.target.className !== 'arrowDown' ) {\r\n                this.setState({\r\n                    inputFocused: false,\r\n                    inputChanged: false\r\n                })\r\n            }\r\n\r\n            if (event.target.className === 'option' && event.target.className !== 'select' && event.target.className !== 'arrowDown') {\r\n                this.handleFocusLost(event);\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     *  on input focus losing. sends the opted category to InputContainer parent component\r\n     * @param event [object]\r\n     */\r\n    handleFocusLost() {\r\n        this.props.handleInputChange(this.state.category, this.props.type );\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param value {string}\r\n     * @param categories {array}\r\n     * @returns {array} matchedItems\r\n     * receives new category value and all categories array, compares value to each array item and returns array of items with match with value\r\n     */\r\n    fillAutoComplete (value , categories)  {\r\n        let matchedItems = [];\r\n        if (value === \"\") {\r\n            matchedItems = [...categories];\r\n            debugger;\r\n            return matchedItems;\r\n        }\r\n\r\n        for (let i = 0; i < categories.length; i++) {\r\n            console.log(categories[i].substr(0, value.length), value);\r\n            if (categories[i].substr(0, value.length).toLowerCase() === value.toLowerCase()) {\r\n                    matchedItems.push(categories[i]);\r\n                }\r\n            }\r\n        return matchedItems;\r\n    }\r\n\r\n    /**\r\n     * on input focus, sets inputFocused state to true to show the auto complete list\r\n     */\r\n    handleFocus() {\r\n        this.setState({\r\n            inputFocused: true,\r\n        })\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param event {object}\r\n     * handles click on the auto complete item ans sets input category value to value of clicked item\r\n     */\r\n    handleClick(event) {\r\n        const selectedValue = event.target.innerHTML;\r\n        const input = event.target.parentNode.parentNode.childNodes[0];\r\n        input.value = selectedValue;\r\n        this.setState({\r\n            category: selectedValue\r\n        })\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param event {object}\r\n     * sets category state, matchedItem state as a result of fillAutoComplete function and inputChanged state to true to\r\n     * show auto complete list\r\n     */\r\n    handleInputChange(event) {\r\n        let category = event.target.value;\r\n        this.setState( {\r\n            category,\r\n            matchedItems: this.fillAutoComplete(category, this.props.values),\r\n            inputChanged: true\r\n        })\r\n    }\r\n\r\n    render () {\r\n        const {inputFocused, matchedItems, inputChanged, ...rest} = this.state;\r\n        return (\r\n        <div className='selectBox'>\r\n            <input name='category' placeholder={this.props.children} className='select' onChange={this.handleInputChange}\r\n                   onFocus={this.handleFocus}/>\r\n            <div className='arrowDown' onClick={this.handleFocus}/>\r\n            {(inputFocused && matchedItems.length > 0) || (matchedItems.length > 0 && inputChanged) ?\r\n                <ul>\r\n                    {this.state.matchedItems.map((category) => {\r\n                        return  <li className='option' onClick={this.handleClick}>{category}</li>\r\n                    })}\r\n                </ul> : null\r\n            }\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default  AutoComplete;\r\n","import axios from 'axios';\r\n\r\nexport const makeRequest = (url) => {\r\n    return axios.get(url).then((response) => {\r\n        try {\r\n            return JSON.parse(response.request.response);\r\n        } catch {\r\n            throw new  Error('Invalid response')\r\n        }\r\n    })\r\n\r\n};\r\n","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass CloudButton extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(event) {\r\n        this.props.onClick(event);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"buttonCloud cloud\" onClick={this.props.onClick ? this.handleClick : null}>\r\n                <div>{this.props.children}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport  default CloudButton;\r\n","/**\r\n * InputContainer Component\r\n * inserts input Block where user can add new item to the list\r\n * receives props: goods(object, redux)\r\n * Creation Date: 17.09.18\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/actions/actions';\r\nimport {bindActionCreators} from \"redux\";\r\nimport AutoComplete from '../autocomplete/autocomplete';\r\nimport { makeRequest } from \"../request-service/request-service\";\r\nimport CloudButton from '../cloud-button/cloud-button';\r\n\r\nclass InputContainer extends Component {\r\n    constructor () {\r\n        super();\r\n        this.handleAddButtonClick = this.handleAddButtonClick.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.clearFields = this.clearFields.bind(this);\r\n        this.clearState = this.clearState.bind(this);\r\n        this.getList = this.getList.bind(this);\r\n        this.getModel = this.getModel.bind(this);\r\n\r\n        this.state = {\r\n            category: '',\r\n            name: '',\r\n            price: '',\r\n            hasErrored: false,\r\n            values: [],\r\n            models: []\r\n        }\r\n    }\r\n\r\n     componentWillMount() {\r\n        this.getList();\r\n     }\r\n    /**\r\n     * @param event (object)\r\n     * validates each item property from this.state, sends new object to redux, clears inputs after adding\r\n     */\r\n    handleAddButtonClick(event) {\r\n        if (this.state.category === '' || this.state.price === '' || this.state.name === '' ) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n        let item = {\r\n            category: this.state.category,\r\n            name: this.state.name,\r\n            price: this.state.price,\r\n            id: Date.now()\r\n        };\r\n        this.props.actions.addItem(item);\r\n        this.clearFields();\r\n        this.clearState();\r\n    }\r\n\r\n    /**\r\n     * searches all inputs and sets their value to ''\r\n     */\r\n    clearFields() {\r\n        let inputs = document.getElementsByTagName('input');\r\n        for (let i = 0; i < inputs.length; i++) {\r\n            inputs[i].value = '';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * clears all states to prevent from creating similar objects after add button clicking\r\n     */\r\n    clearState() {\r\n        this.setState({\r\n            category: '',\r\n            name: '',\r\n            price: ''\r\n        })\r\n    }\r\n\r\n    /**\r\n     * receives list of cars brands and sets it to the state\r\n     */\r\n    getList() {\r\n        makeRequest('https://developers.ria.com/auto/new/marks?category_id=1&api_key=NhVhfXAfj7Z7ns7t05E32bv5BUTMid1FIH1l61hC').then((response) => {\r\n            let marks = response.map((item) => {\r\n                return item.name;\r\n            });\r\n            this.setState({\r\n                values: marks,\r\n                catalogue: response\r\n            })\r\n        })\r\n    }\r\n\r\n    /**\r\n     * gets all models by car brand and sets it to the state\r\n     */\r\n    getModel() {\r\n        let category = this.state.category;\r\n        let model = this.state.catalogue.find((item) => {\r\n            if (item.name === category) {\r\n                return item\r\n            }\r\n        });\r\n       makeRequest(`https://developers.ria.com/auto/new/models?marka_id=${model['marka_id']}&category_id=1&api_key=NhVhfXAfj7Z7ns7t05E32bv5BUTMid1FIH1l61hC`).then((response) => {\r\n            let models = response.map((item) => {\r\n                return item.name;\r\n            });\r\n            this.setState({\r\n                models: models\r\n            })\r\n            }\r\n        )\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param event {object}\r\n     * @param categoryValue [string]\r\n     * reacts on each input change and sets current state\r\n     * on category input value change is being called from child component AutoComplete\r\n     * if value is '', sets this.state.hasErrored to true to show the error message\r\n     */\r\n    handleInputChange (categoryValue, event) {\r\n        let value;\r\n        let type;\r\n        if (event === 'category' || event === 'name') {\r\n            value = categoryValue;\r\n            type = event;\r\n        } else {\r\n             value = event.currentTarget.value;\r\n             type = event.currentTarget.name;\r\n        }\r\n        if (value === '') {\r\n            this.setState({\r\n                hasErrored: true\r\n            });\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                hasErrored: false\r\n            })\r\n        }\r\n        if (type === \"category\") {\r\n            this.setState({\r\n                category: categoryValue\r\n            }, () => this.getModel());\r\n\r\n        }\r\n        else if (type === 'name') {\r\n            this.setState({\r\n                name: value\r\n            })\r\n        }\r\n        else if (type === 'price') {\r\n            this.setState({\r\n                price: parseInt(value)\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render () {\r\n        const {hasErrored, values, models, ...rest} = this.state;\r\n        return (\r\n        <div  className='inputContainer inputBox'>\r\n            <AutoComplete values={values} handleInputChange={this.handleInputChange} type='category'>Select category</AutoComplete>\r\n            <AutoComplete values={models.length !== 0 ? models : []} handleInputChange={this.handleInputChange} type='name'>Select name</AutoComplete>\r\n            <input name='price' placeholder='price' type='number' onChange={(event) => this.handleInputChange(event.target.value, event)}/>\r\n            <CloudButton onClick={this.handleAddButtonClick}>Add item</CloudButton>\r\n            {hasErrored ? <div><b>Fill all inputs</b></div> : null}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { goods: state.goods }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators(actions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InputContainer)\r\n","/**\r\n * ItemInfo Component\r\n * renders each item\r\n * receives props: item {object}\r\n * creation date: 18/09/18\r\n */\r\n\r\nimport React, { Component } from 'react';\r\n\r\nclass ItemInfo extends  Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.onEditClick = this.onEditClick.bind(this);\r\n        this.onSaveClick = this.onSaveClick.bind(this);\r\n        this.state = {\r\n            name: this.props.item.name,\r\n            price: this.props.item.price,\r\n            isEditable: false\r\n        }\r\n    }\r\n\r\n    /**\r\n     * handles input change on editing mode and sets new state\r\n     * @param event {object}\r\n     */\r\n    handleInputChange(event) {\r\n        if (event.target.name === 'name') {\r\n            this.setState({\r\n                name: event.target.value\r\n            })\r\n        } else {\r\n            this.setState({\r\n                price: parseInt(event.target.value)\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * handles edit button click and switches edit mode on\r\n     */\r\n    onEditClick () {\r\n        this.setState ({\r\n            isEditable: true\r\n        })\r\n    }\r\n\r\n    /**\r\n     * handles save button click, switches edit mode off and calls editItem function which saves edited item\r\n     */\r\n    onSaveClick() {\r\n        this.setState({\r\n            isEditable: false\r\n        })\r\n        this.props.editItem(this.props.item, this.state.name, this.state.price);\r\n\r\n    }\r\n\r\n    render (){\r\n        const {isEditable, name, price} = this.state;\r\n        return (\r\n            <div>\r\n                <div className='item'>\r\n                    <div className=\"name\">{isEditable ? <input  value={name} name='name' onChange={this.handleInputChange} /> : name}\r\n                    </div>\r\n                    <div className=\"price\">{isEditable ? <input value={price} onChange={this.handleInputChange} name='price'/> : price}</div>\r\n                </div>\r\n                <div className=\"buttons\">\r\n                    {isEditable ?\r\n                        <button  onClick={this.onSaveClick}> Save</button> :\r\n                        <button  onClick={this.onEditClick}>Edit</button>\r\n                    }\r\n                    <button onClick={() => this.props.deleteItem(this.props.item)}>Delete</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ItemInfo;\r\n","import React, { Component } from 'react';\r\nimport ItemInfo from '../item-info/item-info'\r\nimport {bindActionCreators} from \"redux\";\r\nimport actions from \"../../redux/actions/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport './item-container.css';\r\nclass ItemContainer extends Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    render() {\r\n        const goods = this.props.goods;\r\n        const sum = this.props.sum;\r\n        return (\r\n            <div className='itemBox'>\r\n                <div>\r\n                    {Object.keys(goods).length > 0 ? Object.keys(goods).map((category) => {\r\n                        return  (\r\n                            <div key={category} className='itemList'>\r\n                                <h3>{category}</h3>\r\n                                {goods[category].length > 0 ? goods[category].map((item) => {\r\n                                    return (\r\n                                        <div key={item.id} >\r\n                                            <ItemInfo item={item} deleteItem={this.props.actions.deleteItem} editItem={this.props.actions.editItem}/>\r\n                                        </div>\r\n                                    )\r\n                                }) : null}\r\n                                <h4>Category Sum: {sum.categoriesSum[category]}</h4>\r\n                            </div>\r\n                        )}) : null}\r\n                    {sum.generalSum > 0 ? <div className='itemList'><h3>General Sum: {sum.generalSum}</h3></div> : null}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return  {\r\n        goods:  state.goods,\r\n        sum: state.sum\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators(actions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemContainer)\r\n","import React, { Component } from 'react';\r\n\r\nclass CloudTitle extends  Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='title'>\r\n                    <div className=\"cloud\">\r\n                        <div className=\"cloudshadow\">\r\n                        </div>\r\n                    </div>\r\n                    <h1 className='head-title'>{this.props.children}</h1>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CloudTitle;\r\n","/**\r\n * ProductApp component\r\n * renders InputContainer and ItemContainer components\r\n * creation Date: 24/09/18\r\n */\r\n\r\nimport InputContainer from '../input-container/input-container';\r\nimport React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport ItemContainer from '../item-container/item-container';\r\nimport CloudTitle from '../cloud-title/cloud-title';\r\nimport CloudButton from '../cloud-button/cloud-button';\r\n\r\nclass  ProductApp extends Component {\r\n    constructor() {\r\n        super()\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <CloudTitle>Goods List</CloudTitle>\r\n                    <InputContainer/>\r\n                    <ItemContainer/>\r\n                <CloudButton onClick={null}><Link to='/pdf' className='no-decoration'>View list</Link></CloudButton>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductApp;\r\n","/**\r\n * PDFList component\r\n * renders list of actual items and creates PDF from it\r\n * creation date: 26/09/18\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/actions/actions';\r\nimport {bindActionCreators} from \"redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport pdfMake from 'pdfmake/build/pdfmake';\r\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\r\nimport CloudTitle from '../cloud-title/cloud-title';\r\n\r\nimport CloudButton from '../../components/cloud-button/cloud-button';\r\n\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n\r\nclass  PDFList extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.makePdf = this.makePdf.bind(this);\r\n        this.generateRows = this.generateRows.bind(this);\r\n        this.generateTables = this.generateTables.bind(this);\r\n    }\r\n\r\n\r\n    /**\r\n     * creates tables in PDF according to each category\r\n     * @param docDef {object}\r\n     */\r\n    generateTables (docDef) {\r\n        let categoryArr = Object.keys(this.props.goods);\r\n        for (let i = 0; i < categoryArr.length; i++) {\r\n            docDef.content.push({\r\n                text: `${categoryArr[i]}`, style: 'tableHeader'\r\n            });\r\n            docDef.content.push({\r\n                style: 'table',\r\n                table: {\r\n                    widths: '*',\r\n                    body: this.generateRows(categoryArr[i])\r\n                }\r\n            });\r\n        }\r\n        docDef.content.push({\r\n            text: `General Sum: ${this.props.sum.generalSum} `, style: 'subheader'\r\n        })\r\n    }\r\n\r\n    /**\r\n     * initializes PDF, sets its initial content ans style\r\n     */\r\n    makePdf() {\r\n        let docDefinition = {\r\n            content: [\r\n                {\r\n                    text: 'Price List', style: 'header'\r\n                },\r\n            ],\r\n            styles: {\r\n                header: {\r\n                    fontSize: 18,\r\n                    bold: true,\r\n                    margin: [0, 0, 0, 10],\r\n                    alignment: 'center'\r\n                },\r\n                subheader: {\r\n                    fontSize: 16,\r\n                    bold: true,\r\n                    alignment: 'center'\r\n                },\r\n                tableBody: {\r\n                    margin: [10, 10, 10, 10],\r\n                    alignment: 'center'\r\n                },\r\n                tableHeader: {\r\n                    bold: true,\r\n                    fontSize: 16,\r\n                    color: 'black',\r\n                    alignment: 'center',\r\n                    margin: [10, 0, 0, 0]\r\n                }\r\n            },\r\n        };\r\n        this.generateTables(docDefinition);\r\n        pdfMake.createPdf(docDefinition).open();\r\n    }\r\n\r\n    /**\r\n     * creates content of each table according to category\r\n     * @param category [string]\r\n     * @returns {array}  additional content to PDF file\r\n     */\r\n    generateRows(category) {\r\n        let mainArray = [['Name', 'Price']];\r\n        for (let i = 0; i < this.props.goods[category].length; i++) {\r\n            let currentArray = [];\r\n            currentArray.push(this.props.goods[category][i].name);\r\n            currentArray.push(this.props.goods[category][i].price);\r\n            mainArray.push(currentArray);\r\n        }\r\n        mainArray.push(['Total Sum', this.props.sum.categoriesSum[category]]);\r\n        return mainArray;\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <div className='pdfCanvas'>\r\n                    <CloudTitle>Price List</CloudTitle>\r\n                    {Object.keys(this.props.goods).map((category) => {\r\n                        return (\r\n                            <div className='itemList'>\r\n                                <h3>Category: {category}</h3>\r\n                                <div className='listTable'>\r\n                                    <div className=\"name-col\">Name</div>\r\n                                    <div className=\"price-col\">Price</div>\r\n                                </div>\r\n                                {this.props.goods[category].map ((item) => {\r\n                                    return (\r\n                                        <div className='item'>\r\n                                            <div className=\"name\">{item.name}\r\n                                            </div>\r\n                                            <div className=\"price\">{item.price}</div>\r\n                                        </div>\r\n                                    )\r\n                                }) }\r\n                            </div>\r\n                        )})}\r\n                    {this.props.sum.generalSum ? <h3 className='itemList'>General Sum: {this.props.sum.generalSum}</h3> : null}\r\n                        {Object.keys(this.props.goods).length > 0 ?\r\n                            <CloudButton onClick={this.makePdf}>make PDF</CloudButton>:\r\n                            <div className='emptyMessage'><h3>Empty list. Add something to a list</h3></div>}\r\n                        <CloudButton onClick={null}><Link to='/' className='no-decoration'>Back home</Link></CloudButton>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        goods: state.goods,\r\n        sum: state.sum\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators(actions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PDFList)\r\n","/**\r\n * App component - head component\r\n * sets Redux store, downloads it from local storage, saves it;  navigates to and renders routes\r\n * creation Date: 17/09/18\r\n */\r\nimport React, { Component } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport reducer   from './redux/reducer/reducer';\r\nimport  { saveStore, loadStore } from './components/local-storage/local-storage';\r\nimport ProductApp from './components/product-app/product-app';\r\nimport PDFList from './components/pdf-list/pdf-list';\r\nimport { Route } from 'react-router-dom';\r\nimport './components/item-container/item-container.css';\r\nimport './App.css';\r\n\r\nconst predefinedStore = loadStore();\r\nconst store = createStore(\r\n    reducer,\r\n    predefinedStore\r\n);\r\n\r\nstore.subscribe(() => {\r\n    saveStore(store.getState());\r\n});\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Provider store={store}>\r\n                <div className=\"App\">\r\n                    <Route path=\"/\" exact component={ProductApp}/>\r\n                    <Route path=\"/pdf\" exact component={PDFList}/>\r\n                </div>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default App;\r\n","\r\n/**\r\n * @returns {object} store from local Storage\r\n */\r\nexport const loadStore = () => {\r\n    try {\r\n        const serializedState = localStorage.getItem('state');\r\n        if (serializedState === null) {\r\n            return undefined;\r\n        }\r\n        return JSON.parse(serializedState);\r\n    } catch (err) {\r\n        return undefined;\r\n    }\r\n};\r\n/**\r\n * records store to local storage\r\n * @param state {object}\r\n */\r\nexport const saveStore = (state) => {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('state', serializedState);\r\n};\r\n\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(<BrowserRouter basename={process.env.PUBLIC_URL}><App /></BrowserRouter>, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}